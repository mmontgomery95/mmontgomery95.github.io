I"U
<p>Making sense of the currently created plugins for this project.
From there, implementing the <code class="highlighter-rouge">file_data_source</code> plugin (I believe).</p>

<hr />

<p><strong>-Files-</strong></p>

<p><code class="highlighter-rouge">__init__.py</code></p>
<ul>
  <li>Constructor which tells python that the directory is a module</li>
</ul>

<hr />

<p><code class="highlighter-rouge">data_source.py</code></p>
<ul>
  <li>creates <code class="highlighter-rouge">Datasource</code> class containing following functions: <code class="highlighter-rouge">__init__</code>, <code class="highlighter-rouge">migrate</code>, <code class="highlighter-rouge">create</code>, <code class="highlighter-rouge">clean</code>, <code class="highlighter-rouge">persist</code>; currently stubs, will add methods later</li>
  <li>class is imported in following plugin files to create various data sources (file, HTTP, web)</li>
</ul>

<hr />

<p><code class="highlighter-rouge">file_data_source.py</code>, <code class="highlighter-rouge">http_data_source.py</code>, <code class="highlighter-rouge">web_data_source.py</code></p>
<ul>
  <li>creates classes which call <code class="highlighter-rouge">super().__init__()</code> - inherits methods from <code class="highlighter-rouge">constructor</code> class</li>
  <li>context tells me each class creates the related data source, but not sure how</li>
</ul>

<hr />

<p><code class="highlighter-rouge">app.py</code></p>
<ul>
  <li>Following logic, should call on these files; only calls <code class="highlighter-rouge">user_plugins</code> directory, which does not contain all plugins <em>(possibly implementing others as we go?)</em></li>
  <li>Loops over <code class="highlighter-rouge">user_plugins</code> directory, loads and evaluates them, then calls indicated method on them</li>
  <li>Creates <code class="highlighter-rouge">load_plugins</code> function</li>
  <li>Tried to run file; received custom error message: “EnvValidationError: Environment variable “DEBUG” not set”</li>
  <li>Running the program calls on <code class="highlighter-rouge">__init__.py</code>, thereafter containing all relevant arguments</li>
</ul>

<hr />

<p><strong>Key Terms</strong></p>
<ul>
  <li>constructor -   special type of method used to initialize instance members of a class</li>
  <li><code class="highlighter-rouge">self</code>      -   refers to the current instance of an object</li>
  <li><code class="highlighter-rouge">super()</code>   -   calls inherited methods from a parent or sibling class</li>
  <li><code class="highlighter-rouge">self.eager</code>-   <em>???</em></li>
</ul>

<hr />

:ET